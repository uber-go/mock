// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go
//
// Generated by this command:
//
//	mockgen -typed -private -source=interfaces.go -destination=interfaces_mock.go -package=private
//

// Package private is a generated GoMock package.
package private

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// mockHelloWorld is a mock of HelloWorld interface.
type mockHelloWorld struct {
	ctrl     *gomock.Controller
	recorder *mockHelloWorldmockRecorder
}

// mockHelloWorldmockRecorder is the mock recorder for mockHelloWorld.
type mockHelloWorldmockRecorder struct {
	mock *mockHelloWorld
}

// newmockHelloWorld creates a new mock instance.
func newMockHelloWorld(ctrl *gomock.Controller) *mockHelloWorld {
	mock := &mockHelloWorld{ctrl: ctrl}
	mock.recorder = &mockHelloWorldmockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *mockHelloWorld) EXPECT() *mockHelloWorldmockRecorder {
	return m.recorder
}

// ISGOMOCK indicates that this struct is a gomock mock.
func (m *mockHelloWorld) ISGOMOCK() struct{} {
	return struct{}{}
}

// Hi mocks base method.
func (m *mockHelloWorld) Hi() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Hi")
	ret0, _ := ret[0].(string)
	return ret0
}

// Hi indicates an expected call of Hi.
func (mr *mockHelloWorldmockRecorder) Hi() *mockHelloWorldHiCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Hi", reflect.TypeOf((*mockHelloWorld)(nil).Hi))
	return &mockHelloWorldHiCall{Call: call}
}

// mockHelloWorldHiCall wrap *gomock.Call
type mockHelloWorldHiCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *mockHelloWorldHiCall) Return(arg0 string) *mockHelloWorldHiCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *mockHelloWorldHiCall) Do(f func() string) *mockHelloWorldHiCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *mockHelloWorldHiCall) DoAndReturn(f func() string) *mockHelloWorldHiCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
