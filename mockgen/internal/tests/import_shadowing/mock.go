// Code generated by MockGen. DO NOT EDIT.
// Source: import.go
//
// Generated by this command:
//
//	mockgen -destination mock.go -source import.go -package import_shadowing . Bar
//

// Package import_shadowing is a generated GoMock package.
package import_shadowing

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	fooPkg "go.uber.org/mock/mockgen/internal/tests/import_shadowing/foo"
)

// MockBar is a mock of Bar interface.
type MockBar struct {
	ctrl     *gomock.Controller
	recorder *MockBarMockRecorder
}

// MockBarMockRecorder is the mock recorder for MockBar.
type MockBarMockRecorder struct {
	mock *MockBar
}

// NewMockBar creates a new mock instance.
func NewMockBar(ctrl *gomock.Controller) *MockBar {
	mock := &MockBar{ctrl: ctrl}
	mock.recorder = &MockBarMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBar) EXPECT() *MockBarMockRecorder {
	return m.recorder
}

// ISGOMOCK indicates that this struct is a gomock mock.
func (m *MockBar) ISGOMOCK() struct{} {
	return struct{}{}
}

// Hoge mocks base method.
func (m *MockBar) Hoge(foo string) fooPkg.MyInt {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Hoge", foo)
	ret0, _ := ret[0].(fooPkg.MyInt)
	return ret0
}

// Hoge indicates an expected call of Hoge.
func (mr *MockBarMockRecorder) Hoge(foo any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Hoge", reflect.TypeOf((*MockBar)(nil).Hoge), foo)
}
