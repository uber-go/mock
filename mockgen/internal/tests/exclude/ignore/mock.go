// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go
//
// Generated by this command:
//
//	mockgen -source=interfaces.go -destination=ignore/mock.go IgnoreMe
//

// Package mock_exclude is a generated GoMock package.
package mock_exclude

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIgnoreMe is a mock of IgnoreMe interface.
type MockIgnoreMe struct {
	ctrl     *gomock.Controller
	recorder *MockIgnoreMeMockRecorder
	isgomock struct{}
}

// MockIgnoreMeMockRecorder is the mock recorder for MockIgnoreMe.
type MockIgnoreMeMockRecorder struct {
	mock *MockIgnoreMe
}

// NewMockIgnoreMe creates a new mock instance.
func NewMockIgnoreMe(ctrl *gomock.Controller) *MockIgnoreMe {
	mock := &MockIgnoreMe{ctrl: ctrl}
	mock.recorder = &MockIgnoreMeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIgnoreMe) EXPECT() *MockIgnoreMeMockRecorder {
	return m.recorder
}

// A mocks base method.
func (m *MockIgnoreMe) A() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "A")
	ret0, _ := ret[0].(bool)
	return ret0
}

// A indicates an expected call of A.
func (mr *MockIgnoreMeMockRecorder) A() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "A", reflect.TypeOf((*MockIgnoreMe)(nil).A))
}
