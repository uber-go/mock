// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go
//
// Generated by this command:
//
//	mockgen -source=interfaces.go -destination=mock.go -package=exclude -exclude_interfaces=IgnoreMe,IgnoreMe2
//

// Package exclude is a generated GoMock package.
package exclude

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockGenerateMockForMe is a mock of GenerateMockForMe interface.
type MockGenerateMockForMe struct {
	ctrl     *gomock.Controller
	recorder *MockGenerateMockForMeMockRecorder
}

// MockGenerateMockForMeMockRecorder is the mock recorder for MockGenerateMockForMe.
type MockGenerateMockForMeMockRecorder struct {
	mock *MockGenerateMockForMe
}

// NewMockGenerateMockForMe creates a new mock instance.
func NewMockGenerateMockForMe(ctrl *gomock.Controller) *MockGenerateMockForMe {
	mock := &MockGenerateMockForMe{ctrl: ctrl}
	mock.recorder = &MockGenerateMockForMeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGenerateMockForMe) EXPECT() *MockGenerateMockForMeMockRecorder {
	return m.recorder
}

// B mocks base method.
func (m *MockGenerateMockForMe) B() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "B")
	ret0, _ := ret[0].(int)
	return ret0
}

// B indicates an expected call of B.
func (mr *MockGenerateMockForMeMockRecorder) B() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "B", reflect.TypeOf((*MockGenerateMockForMe)(nil).B))
}
